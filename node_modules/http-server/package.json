{
  "_args": [
    [
      {
        "raw": "http-server",
        "scope": null,
        "escapedName": "http-server",
        "name": "http-server",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/brittmac/meatandgreekco.com"
    ]
  ],
  "_from": "http-server",
  "_hasShrinkwrap": false,
  "_id": "http-server@0.12.0",
  "_location": "/http-server",
  "_nodeVersion": "13.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/http-server_0.12.0_1574801245562_0.3906023849567499"
  },
  "_npmUser": {
    "name": "thornjad",
    "email": "jade@jmthornton.net"
  },
  "_npmVersion": "6.13.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "http-server",
    "scope": null,
    "escapedName": "http-server",
    "name": "http-server",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/http-server/-/http-server-0.12.0.tgz",
  "_shasum": "316b450603c0454d4a462d97a3132808a9858563",
  "_shrinkwrap": null,
  "_spec": "http-server",
  "_where": "/Users/brittmac/meatandgreekco.com",
  "bin": {
    "http-server": "./bin/http-server",
    "hs": "./bin/http-server"
  },
  "bugs": {
    "url": "https://github.com/http-party/http-server/issues"
  },
  "contributors": [
    {
      "name": "Charlie Robbins",
      "email": "charlie.robbins@gmail.com"
    },
    {
      "name": "Marak Squires",
      "email": "marak.squires@gmail.com"
    },
    {
      "name": "Charlie McConnell",
      "email": "charlie@charlieistheman.com"
    },
    {
      "name": "Joshua Holbrook",
      "email": "josh.holbrook@gmail.com"
    },
    {
      "name": "Maciej MaÅ‚ecki",
      "email": "maciej.malecki@notimplemented.org"
    },
    {
      "name": "Matthew Bergman",
      "email": "mzbphoto@gmail.com"
    },
    {
      "name": "brad dunbar",
      "email": "dunbarb2@gmail.com"
    },
    {
      "name": "Dominic Tarr"
    },
    {
      "name": "Travis Person",
      "email": "travis.person@gmail.com"
    },
    {
      "name": "Jinkwon Lee",
      "email": "master@bdyne.net"
    },
    {
      "name": "BigBlueHat",
      "email": "byoung@bigbluehat.com"
    },
    {
      "name": "Daniel Dalton",
      "email": "daltond2@hawkmail.newpaltz.edu"
    },
    {
      "name": "Jade Michael Thornton",
      "email": "jade@jmthornton.net"
    }
  ],
  "dependencies": {
    "basic-auth": "^1.0.3",
    "colors": "^1.3.3",
    "corser": "^2.0.1",
    "ecstatic": "^3.3.2",
    "http-proxy": "^1.17.0",
    "opener": "^1.5.1",
    "optimist": "~0.6.1",
    "portfinder": "^1.0.20",
    "secure-compare": "3.0.1",
    "union": "~0.5.0"
  },
  "description": "A simple zero-configuration command-line http server",
  "devDependencies": {
    "common-style": "^3.0.0",
    "request": "^2.88.0",
    "vows": "~0.8.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-imGLDSTT1BZ0QG1rBFnaZ6weK5jeisUnCxZQI1cpYTdz0luPUM5e3s+WU5zRWEkiI6DQxL2p54oeKrDlzO6bRw==",
    "shasum": "316b450603c0454d4a462d97a3132808a9858563",
    "tarball": "https://registry.npmjs.org/http-server/-/http-server-0.12.0.tgz",
    "fileCount": 5,
    "unpackedSize": 19928,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd3Y9dCRA9TVsSAnZWagAAM/sP/AtGhfTmrejmEtB457sr\nUsRhQeo76yaMYvniI7TNMJvxdVPEZ7dx17jOkEifI51aKfFNcpGxOgxZSN55\nD9NmQTFoapt36RF2qLUiWQOkA6EsaMwMrk+k+BquIx4LvZzer8R2gXIkvpeK\nJ6lnxRvcViDc0fF6smYTjBo1ofijrCvJf5k8EUxWwIhG7c8dXxg2IqvHP8Yd\nP6UeqAEAQaeOQW5dZ9iMnT/+3ySaZwnmaSxjZl8JUbwSkQe+jrgNrC0LyV3H\n8d1zMcHAvkTAMwyVSh60+V7542nvFJs4ZxMqStRo8Jvex1yf2fS+tJfolBUb\nY7xbT5sq4LUighTNrAK5ifv4nPnyzbpi8mJhbdlOwkCTSuOHD22KWjLzAz1H\nOmDRS2+GQx1WC2xRzWjo4tNqoAYbcmDQLZergk9ILVtuWo4BLXaNT2cRiGKd\nt2Obyf0XObiMyzUSzdXFJqP/GAkGwhhcBGNl7Hd6ppfx7Ejq1OvadkRvujJ1\npRxSPg6cCVLa+P5cTnCBsifztbL+Hi2T7HHTzFKX+sjcU0h+bQ3nVg2O9+AH\nNM+Of7WtJ0BKU+T38Rf/K8cMzYz1FagZscdvJJL+lnVG+KFTRkqfJePhaD7P\neYijSRb2IoWst2dcx3fD271B+IRMzYydwgpdzg8sxNTabRplZ7H9flFl6mxv\naq+b\r\n=WRhD\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "lib",
    "bin"
  ],
  "gitHead": "e6f6358c900dceac5593eae0c4aed32b09475feb",
  "homepage": "https://github.com/http-party/http-server#readme",
  "keywords": [
    "cli",
    "command",
    "http",
    "server"
  ],
  "license": "MIT",
  "main": "./lib/http-server",
  "maintainers": [
    {
      "name": "bigbluehat",
      "email": "byoung@bigbluehat.com"
    },
    {
      "name": "indexzero",
      "email": "charlie.robbins@gmail.com"
    },
    {
      "name": "thornjad",
      "email": "jade@jmthornton.net"
    }
  ],
  "name": "http-server",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "[![build status](https://img.shields.io/travis/http-party/http-server.svg?style=flat-square)](https://travis-ci.org/http-party/http-server)\n[![dependencies status](https://img.shields.io/david/http-party/http-server.svg?style=flat-square)](https://david-dm.org/http-party/http-server)\n[![npm](https://img.shields.io/npm/v/http-server.svg?style=flat-square)](https://www.npmjs.com/package/http-server)\n[![license](https://img.shields.io/github/license/http-party/http-server.svg?style=flat-square)](https://github.com/http-party/http-server)\n\n# http-server: a command-line http server\n\n`http-server` is a simple, zero-configuration command-line http server.  It is powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development, and learning.\n\n![](https://github.com/nodeapps/http-server/raw/master/screenshots/public.png)\n\n# Installing globally:\n\nInstallation via `npm`:\n\n     npm install http-server -g\n\nThis will install `http-server` globally so that it may be run from the command line.\n\n## Running on-demand:\n\nUsing `npx` you can run the script without installing it first:\n\n     npx http-server [path] [options]\n\n## Usage:\n\n     http-server [path] [options]\n\n`[path]` defaults to `./public` if the folder exists, and `./` otherwise.\n\n*Now you can visit http://localhost:8080 to view your server*\n\n**Note:** Caching is on by default. Add `-c-1` as an option to disable caching.\n\n## Available Options:\n\n`-p` or `--port` Port to use (defaults to 8080)\n\n`-a` Address to use (defaults to 0.0.0.0)\n\n`-d` Show directory listings (defaults to `true`)\n\n`-i` Display autoIndex (defaults to `true`)\n\n`-g` or `--gzip` When enabled (defaults to `false`) it will serve `./public/some-file.js.gz` in place of `./public/some-file.js` when a gzipped version of the file exists and the request accepts gzip encoding. If brotli is also enabled, it will try to serve brotli first.\n\n`-b` or `--brotli` When enabled (defaults to `false`) it will serve `./public/some-file.js.br` in place of `./public/some-file.js` when a brotli compressed version of the file exists and the request accepts `br` encoding. If gzip is also enabled, it will try to serve brotli first.\n\n`-e` or `--ext` Default file extension if none supplied (defaults to `html`)\n\n`-s` or `--silent` Suppress log messages from output\n\n`--cors` Enable CORS via the `Access-Control-Allow-Origin` header\n\n`-o [path]` Open browser window after starting the server. Optionally provide a URL path to open. e.g.: -o /other/dir/\n\n`-c` Set cache time (in seconds) for cache-control max-age header, e.g. `-c10` for 10 seconds (defaults to `3600`). To disable caching, use `-c-1`.\n\n`-U` or `--utc` Use UTC time format in log messages.\n\n`--log-ip` Enable logging of the client's IP address (default: `false`).\n\n`-P` or `--proxy` Proxies all requests which can't be resolved locally to the given url. e.g.: -P http://someurl.com\n\n`--username` Username for basic authentication [none]\n\n`--password` Password for basic authentication [none]\n\n`-S` or `--ssl` Enable https.\n\n`-C` or `--cert` Path to ssl cert file (default: `cert.pem`).\n\n`-K` or `--key` Path to ssl key file (default: `key.pem`).\n\n`-r` or `--robots` Provide a /robots.txt (whose content defaults to `User-agent: *\\nDisallow: /`)\n\n`--no-dotfiles` Do not show dotfiles\n\n`-h` or `--help` Print this list and exit.\n\n## Magic Files\n\n- `index.html` will be served as the default file to any directory requests.\n- `404.html` will be served if a file is not found. This can be used for Single-Page App (SPA) hosting to serve the entry page.\n\n## Catch-all redirect\n\nTo implement a catch-all redirect, use the index page itself as the proxy with:\n\n```\nhttp-server --proxy http://localhost:8080?\n```\n\nNote the `?` at the end of the proxy URL. Thanks to [@houston3](https://github.com/houston3) for this clever hack!\n\n## Need a self signed SSL Certificate?\n\nCreate the `cert.pem` and `key.pem` via the command:\n\n```\nopenssl req -newkey rsa:2048 -new -nodes -x509 -days 3650 -keyout key.pem -out cert.pem\n```\n\n# Development\n\nCheckout this repository locally, then:\n\n```sh\n$ npm i\n$ node bin/http-server\n```\n\n*Now you can visit http://localhost:8080 to view your server*\n\nYou should see the turtle image in the screenshot above hosted at that URL. See\nthe `./public` folder for demo content.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/http-party/http-server.git"
  },
  "scripts": {
    "pretest": "common bin/http-server lib/ test",
    "start": "node ./bin/http-server",
    "test": "vows --spec --isolate"
  },
  "version": "0.12.0"
}
